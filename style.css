@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

* {
  margin: 0;
  padding: 0;
  color: white;
  font-family: 'Press Start 2P';
}

body {
  background-color: black;
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr 80vh 1fr;
  grid-template-rows: auto;
  grid-template-areas: 
    "header header header"
    "lboard main score"
    "lboard main controls";
  align-items: center;
  justify-items: center;
}

header {
  grid-area: header;
  text-align: center;
}

.startDiv {
  position: absolute;
  display: flex;
  height: 100vh;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.9);
  align-items: center;
  justify-content: center;
}

.startDiv div {
  background-color: #ccc;
  z-index: 100;
  border-radius: 20px;
  box-shadow: 4px 4px 4px #000;
  padding: 20px 30px;
  display: flex;
  height: 64px;
  align-items: center;
}

.startDiv h1 {
  text-shadow: 2px 2px 2px #000;
  font-size: 2em;
  margin-left: 10px;
}

header h1 {
  font-size: 4em;
}

/* Container that holds both the grid and player */
.gameArea {
  grid-area: main;
  width: 80vh;
  height: 80vh;
  position: relative;
  overflow: hidden; /* Stops player from moving outside the visible maze area */
}

/* Grid layout for the maze blocks */
main {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(10, 1fr);
  width: 100%;
  height: 100%;
}

/* Ensures each maze block centers its contents */
.block {
  display: flex;
  justify-content: center;
  align-items: center;
}

.lives {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  margin: 0.5em;
}

.lives li {
  list-style: none;
  background-color: yellow;
  width: 2em;
  height: 2em;
  border-radius: 100%;
  margin: 5px;
}

.lives ul {
  display: flex;
}

.score {
  grid-area: score;
}

.leaderboard {
  grid-area: lboard;
}

.leaderboard ol {
  margin-left: 2.5em;
  margin-top: 1em;
  text-align: left;
}

.leaderboard ol li {
  font-size: 0.85em;
  padding: 1em 0;
}

div {
  text-align: center;
}

div h1 {
  font-size: 1.25em;
  text-decoration: underline;
}

div p {
  margin: 0.5em;
  font-size: 2em;
}

/* Player appearance and movement boundaries */
#player {
  background-color: yellow;
  border-radius: 100%;
  width: 40px;
  height: 40px;
  position: absolute;
  z-index: 10;
}

/* The black animated part that creates the mouth effect */
.mouth {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Enemy appearance */
.enemy {
  background-color: green;
  border-radius: 100%;
  height: 90%;
  width: 90%;
  position: relative;
}

/* Point (collectable) appearance */
.point {
  background-color: white;
  border-radius: 100%;
  width: 8px;
  height: 8px;
}

/* Maze walls */
.wall {
  background-color: blue;
  width: 100%;
  height: 100%;
}

/* Styles for each mouth direction and the animation */
.up, .down, .left, .right {
  background-color: black;
  animation: mouth 1.25s infinite steps(1, end);
}

.up { clip-path: polygon(0 0, 100% 0, 50% 50%); }
.down { clip-path: polygon(0 100%, 100% 100%, 50% 50%); }
.left { clip-path: polygon(0 0, 0 100%, 50% 50%); }
.right { clip-path: polygon(100% 0, 100% 100%, 50% 50%); }

@keyframes mouth {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

/* Layout for the on-screen directional controls */
.controls {
  grid-area: controls;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-template-areas: 
    ". upArrow ."
    "leftArrow . rightArrow"
    ". downArrow .";
  width: 25vh;
  height: 25vh;
}

button {
  background-color: rgb(10, 10, 10);
  color: white;
  font-family: 'Press Start 2P';
  font-size: 1em;
  border: none;
}

button:nth-child(1) { grid-area: leftArrow; }
button:nth-child(2) { grid-area: upArrow; }
button:nth-child(3) { grid-area: rightArrow; }
button:nth-child(4) { grid-area: downArrow; }

/* Visual feedback for when the player dies */
@keyframes deathAnimation {
  0% { transform: scale(1); }
  50% { transform: scale(0.5); }
  100% { transform: scale(0); }
}

/* Animation when the player gets hit */
@keyframes hitAnimation {
  0%, 100% { background-color: yellow; transform: scale(1); }
  50% { background-color: red; transform: scale(0.75); }
}

.dead {
  animation: deathAnimation 1.5s ease-in-out forwards;
}

.hit {
  animation: hitAnimation 1s ease-in-out;
}

/* Input style for name field on start screen */
#playerNameInput {
  background-color: black;
  color: white;
  border: 2px solid white;
  padding: 10px 15px;
  font-size: 0.75em;
  font-family: 'Press Start 2P';
  margin-left: 10px;
  width: 200px;
}
